#ifndef VERTEX__
#define VERTEX__

#include <stdio.h>

/**
 * @brief Определение для информирования об отсутствии ошибок
 */
#define VERTEX_OK 0

/**
 * @brief Определение для информирования о некорректных аргументах
 */
#define VERTEX_INCORRECT_ARGUMENTS -1

/**
 * @brief Определение для информирования об ошибке памяти
 */
#define VERTEX_MEMORY -2

/**
 * @brief Определение для информирования о некорректном вводе
 */
#define VERTEX_INCORRECT_INPUT -3

typedef int vertex_error_t;

/**
 * @struct vertex
 * @brief Представляет точку в трехмерном пространстве.
 *
 * Эта структура используется для представления вершины с координатами x, y и z,
 * соответствующими евклидовому пространству.
 */
struct vertex
{
    double x; // x-координата вершины
    double y; // y-координата вершины
    double z; // z-координата вершины
};

/**
 * @def VERTEX_INIT(name)
 * @brief Инициализирует объект вершины с нулевыми координатами.
 *
 * Этот макрос создает объект вершины с указанным именем и инициализирует
 * его координаты x, y и z нулями. Это удобный способ объявить и инициализировать
 * вершину без вызова конструктора или функции инициализации.
 *
 * @param name Имя переменной вершины для инициализации.
 */
#define VERTEX_INIT(name, x_center, y_center, z_center) \
    struct vertex name = (struct vertex) {.x = x_center, .y = y_center, .z = z_center}

/**
 * @brief Считывает вершину из указанного входного потока.
 *
 * Эта функция считывает вершину из указанного входного потока и сохраняет
 * считанные координаты в указанном объекте вершины.
 *
 * @param stream Входной поток для считывания.
 * @param vertex Объект вершины для сохранения считанных координат.
 * @return Код ошибки, указывающий результат операции.
 */
vertex_error_t vertex_scan(FILE *stream, struct vertex *vertex);

/**
 * @brief Печатает координаты вершины в указанный выходной поток.
 *
 * Эта функция печатает x, y и z координаты указанной вершины
 * в указанный выходной поток.
 *
 * @param stream Выходной поток для печати.
 * @param vertex Объект вершины для печати.
 */
void vertex_print(FILE *stream, const struct vertex *vertex);

#endif // VERTEX__